****************************************************************************************************************

✅ Summary of Today

🧩 Settings UI Structure
You finalized the structure:
PreferencesContainerVBox (for sliders + mute)
StartOverContainerVBox (for confirm/cancel reset)
We exported and wired all nodes in MenuSettings.cs, with public [Export] fields.

🎛 Component Integration
You provided two reusable components:
MenuLoadComponent → handles fade-in
MenuFadeComponent → handles fade-out
Both are wired to a shared CanvasContainer.

🔁 Transition Logic in MenuSettings
We created OnStartOverPressed() and OnCancelStartOverPressed() to:
Fade out the current container
Swap visibility
Fade in the next screen
ConfirmStartOverPressed() is stubbed for tomorrow.

****************************************************************************************************************

🚀 Tomorrow’s Jump Point – Wire Settings

✅ Wire up all connections in the scene tree:
Ensure all exported fields in MenuSettings are correctly linked.
Confirm both FadeComponent and LoadComponent are assigned.
🔄 Implement Reset Logic in ConfirmStartOverPressed():
Reset saved settings (sliders, mute state, HUD, etc.)
Call G.SaveData.ResetAll() or whatever your reset function is.
Optionally show a confirmation popup or sound.
🎨 Hook Up Sliders and Toggle:
Update HUD opacity, master volume, and SFX volume live.
Save or apply values immediately or on exit.
🧼 (Optional Refactor): Add FadeIn() to MenuLoadComponent to avoid manual _Ready() calls.

****************************************************************************************************************

✅ Portfolio Version Backlog

🎵 SFX – Sound implementation with enums via AutoSFX (planned).
🧹 Refactor – Code cleanup (esp. weapon system, components).
🛒 Armory or Shop – Inventory/shop screen for loadout or upgrades.
🌌 3 Levels – Final content amount for portfolio cut.
👾 More Enemies – A couple new ones for variety.
⚙️ Settings Screen – Audio, controls, maybe visuals.
🗺️ Level Selection Screen – World map or clean selection interface.
🧬 Weapon Type System – Elemental/tech types, rock-paper-scissors-style behavior.

****************************************************************************************************************

🌀 Showcase Backlog

🏆 Full Progression System – Unlocks, upgrades, meta-level persistence.
🐾 Full Oiia Narrative & Final Battle – Thematic arc and resolution.
🧠 Advanced AI Patterns – Smarter enemies with behaviors.
🎨 Skin System – Cosmetic unlocks from IAPs or progress.
🔮 Karma & Narrative Impact – Use of AutoGameStats to change story/dialog.
📖 Lore System – Optional story content, maybe codex-style.
🕹️ Touch GUI Finalization – Post-keyboard support polish.
📦 Import/Export Save System – For continuity/testing.

****************************************************************************************************************